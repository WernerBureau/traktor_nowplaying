# modified heavily from the poetry project https://github.com/python-poetry/poetry

name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  Linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Building release
      run: |
        pyinstaller traktor_nowplaying/cli.py -n traktor_nowplaying --onefile
        tar -czvf traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz README.md -C dist traktor_nowplaying
    - name: Upload release file
      uses: actions/upload-artifact@v1
      with:
        name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz
        path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz

  MacOS:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Building release
      run: |
        pyinstaller traktor_nowplaying/cli.py -n traktor_nowplaying --onefile
        tar -czvf traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz README.md -C dist traktor_nowplaying
    - name: Upload release file
      uses: actions/upload-artifact@v1
      with:
        name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz
        path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz

  Windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get tag
      id: tag
      shell: bash
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
    - name: Building release
      run: |
        pyinstaller traktor_nowplaying/cli.py -n traktor_nowplaying --onefile
        7z a traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip README.md .\dist\traktor_nowplaying.exe
    - name: Upload release file
      uses: actions/upload-artifact@v1
      with:
        name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip
        path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip

  Release:
    needs: [Linux, MacOS, Windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download Linux release file
        uses: actions/download-artifact@master
        with:
          name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz
          path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz

      - name: Download MacOS release file
        uses: actions/download-artifact@master
        with:
          name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz
          path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz

      - name: Download Windows release file
        uses: actions/download-artifact@master
        with:
          name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip
          path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Linux release file asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz
          asset_name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload MacOS release file asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz
          asset_name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-macos.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows release file asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip
          asset_name: traktor_nowplaying-${{ steps.tag.outputs.tag }}-win.zip
          asset_content_type: application/zip

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
